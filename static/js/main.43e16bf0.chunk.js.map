{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photos","setPhotos","api","values","a","fetch","search","headers","response","json","data","results","initialValues","onSubmit","name","className","onClick","src","alt","type","map","photo","url","links","html","window","open","urls","regular","description","alt_description","join","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAwDeA,MAlDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAG,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACaC,MAAM,4DAAD,OAA6DF,EAAOG,QAAU,CACxGC,QAAQ,CACN,cAAiB,2DAHX,cACJC,EADI,gBAMSA,EAASC,OANlB,OAMJC,EANI,OAOVT,EAAUS,EAAKC,SAPL,2CAAH,sDAaT,OACE,gCACC,mCACG,8BACE,uCAGH,cAAC,IAAD,CACCC,cAAe,CAACN,OAAQ,IACxBO,SAAUX,EAFX,SAIE,eAAC,IAAD,WACE,6CACA,cAAC,IAAD,CAAOY,KAAK,gBAGhB,qBAAKC,UAAU,UAAf,SACG,qBAAKC,QArBC,WACZf,EAAU,KAoBiBgB,IAAI,iBAAiBC,IAAI,GAAGC,KAAK,gBAG3D,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACGf,EAAOoB,KAAI,SAAAC,GAAK,OAChB,0BAAwBL,QAAS,kBArC5BM,EAqCuCD,EAAME,MAAMC,KArC5CC,OAAOC,KAAKJ,GAAnB,IAAAA,GAqCL,UACI,qBAAKL,IAAKI,EAAMM,KAAKC,QAASV,IAAI,KAClC,4BAAI,CAACG,EAAMQ,YAAaR,EAAMS,iBAAiBC,KAAK,WAF1CV,EAAMW,eCjCfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.43e16bf0.chunk.js","sourcesContent":["import {useState} from 'react'\nimport {Formik, Form, Field} from 'formik'\nimport './Header.css'\nimport './Content.css'\nimport './Article.css'\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const open = url => window.open(url)\n  const api = async (values) =>{\n    const response = await fetch(`https://api.unsplash.com/search/photos?per_page=20&query=${values.search}`, {\n      headers:{\n        'Authorization': 'Client-ID dWKsEoIGxek0aQWAnGXuyviWEK04cor_wPkrmv9wY88'\n      }\n    })\n    const data = await response.json()\n    setPhotos(data.results);\n  }\n  const reset = () =>{\n    setPhotos([])\n  }\n  // console.log({photos});\n  return (\n    <div >\n     <header>\n        <div>\n          <h1>Img</h1>\n        </div>\n\n       <Formik\n        initialValues={{search: ''}}\n        onSubmit={api}\n       >\n         <Form>\n           <label >Search: </label>\n           <Field name='search' />\n         </Form>\n       </Formik>\n       <div className='restart' >\n          <img onClick={reset} src=\"bx-refresh.svg\" alt=\"\" type='submit'/>\n       </div>\n     </header>\n     <div className=\"container\">\n       <div className=\"center\">\n         {photos.map(photo=>\n          <article key={photo.id} onClick={() => open(photo.links.html)} >\n              <img src={photo.urls.regular} alt=\"\" />\n              <p>{[photo.description, photo.alt_description].join(' - ')}</p>\n          </article> )}\n       </div>\n     </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}